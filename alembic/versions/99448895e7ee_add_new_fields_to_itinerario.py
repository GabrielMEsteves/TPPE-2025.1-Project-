"""add new fields to itinerario

Revision ID: 99448895e7ee
Revises: b59dc6505f75
Create Date: 2025-07-10 19:44:20.772902

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '99448895e7ee'
down_revision: Union[str, Sequence[str], None] = 'b59dc6505f75'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create enum types first
    op.execute("CREATE TYPE tipotransporteenum AS ENUM ('aviao', 'onibus')")
    op.execute("CREATE TYPE tipoassentoenum AS ENUM ('economica', 'executiva', 'primeira_classe', 'cama_leito', 'semi_leito', 'convencional')")
    
    # Add columns
    op.add_column('itinerarios', sa.Column('duracao_viagem', sa.String(), nullable=True))
    op.add_column('itinerarios', sa.Column('preco_viagem', sa.Float(), nullable=True))
    op.add_column('itinerarios', sa.Column('tipo_transporte', sa.Enum('aviao', 'onibus', name='tipotransporteenum'), nullable=True))
    op.add_column('itinerarios', sa.Column('tipo_assento', sa.Enum('economica', 'executiva', 'primeira_classe', 'cama_leito', 'semi_leito', 'convencional', name='tipoassentoenum'), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('itinerarios', 'tipo_assento')
    op.drop_column('itinerarios', 'tipo_transporte')
    op.drop_column('itinerarios', 'preco_viagem')
    op.drop_column('itinerarios', 'duracao_viagem')
    
    # Drop enum types
    op.execute("DROP TYPE IF EXISTS tipoassentoenum")
    op.execute("DROP TYPE IF EXISTS tipotransporteenum")
    # ### end Alembic commands ###
